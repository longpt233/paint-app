/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

public class ImagePane extends JPanel {

         private int ROW = 3;
         private int COL = 5;
         private int currrow;
         private int currcol;
         private ImageCell[][] imageCells = new ImageCell[ROW][COL];
         private ImageIcon[][] images = new ImageIcon[ROW][COL];
         private BufferedImage selectedImage;
         private int chose = 0;
         private Point location;

         public ImagePane() {
                  initComponents();
                  this.setSize(new Dimension(COL * ImageCell.WIDTH, ROW * ImageCell.HEIGHT));
                  addMouseListener(new MouseAdapter() {
                           public void mousePressed(MouseEvent e) {
                                    location = e.getPoint();
                                    if (location.x % ImageCell.HEIGHT == 0 || location.y % ImageCell.WIDTH == 0) {
                                             return;
                                    }
                                    currrow = location.y / ImageCell.HEIGHT;
                                    currcol = location.x / ImageCell.WIDTH;
                                    if (currcol < 0 || currcol > COL - 1 || currrow < 0 || currrow > ROW - 1) {
                                             return;
                                    }
                                    //  g.drawImage(images[currrow][currcol].getImage(), currcol * ImageCell.WIDTH - 7, currrow * ImageCell.HEIGHT - 7, ImageCell.WIDTH + 20, ImageCell.HEIGHT + 20, null);
                                    setImage();
                                    repaint();
                           }
                  });
         }

         public void setImage() {
                  chose = currrow * COL + currcol;
                 // System.out.println("you chose pic"+chose);
                  try {
                           selectedImage = ImageIO.read(getClass().getResource("/Library/Cars/" + chose + ".png"));
                  } catch (IOException ex) {
                           Logger.getLogger(ImagePane.class.getName()).log(Level.SEVERE, null, ex);
                  }
         }
         
         public String getChosse(){
                  Integer aInteger=new Integer(chose);
                  return  aInteger.toString();
         }

         public BufferedImage getSelectedImage() {
                  return selectedImage;
         }

        

         public void paintComponent(Graphics g) {
                  super.paintComponent(g);
                  for (int i = 0; i < ROW; i++) {
                           for (int j = 0; j < COL; j++) {
                                    BufferedImage image = null;
                                    int k = i * COL + j;
                                    try {
                                             image = ImageIO.read(getClass().getResource("/Library/Cars/" + k + ".png"));
                                    } catch (IOException ex) {
                                             Logger.getLogger(ImagePane.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    images[i][j] = new ImageIcon(image.getScaledInstance(ImageCell.WIDTH, ImageCell.HEIGHT, Image.SCALE_SMOOTH));
                                    imageCells[i][j] = new ImageCell(images[i][j]);
                                    //Ve image len panel g
                                    imageCells[i][j].paintIcon(null, g, j * ImageCell.WIDTH, i * ImageCell.HEIGHT);
                           }
                  }
         }

         /**
          * This method is called from within the constructor to initialize the form. WARNING: Do
          * NOT modify this code. The content of this method is always regenerated by the Form
          * Editor.
          */
         @SuppressWarnings("unchecked")
         // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
         private void initComponents() {

                  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                  this.setLayout(layout);
                  layout.setHorizontalGroup(
                           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGap(0, 505, Short.MAX_VALUE)
                  );
                  layout.setVerticalGroup(
                           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGap(0, 134, Short.MAX_VALUE)
                  );
         }// </editor-fold>//GEN-END:initComponents


         // Variables declaration - do not modify//GEN-BEGIN:variables
         // End of variables declaration//GEN-END:variables
}
